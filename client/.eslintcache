[{"D:\\documents\\codeing\\femi-app\\client\\src\\index.js":"1","D:\\documents\\codeing\\femi-app\\client\\src\\serviceWorker.js":"2","D:\\documents\\codeing\\femi-app\\client\\src\\app\\store.js":"3","D:\\documents\\codeing\\femi-app\\client\\src\\features\\femiSlice.js":"4","D:\\documents\\codeing\\femi-app\\client\\src\\api.js":"5","D:\\documents\\codeing\\femi-app\\client\\src\\util.js":"6","D:\\documents\\codeing\\femi-app\\client\\src\\components\\List.jsx":"7","D:\\documents\\codeing\\femi-app\\client\\src\\components\\Institution.jsx":"8","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MonthlySalary.jsx":"9","D:\\documents\\codeing\\femi-app\\client\\src\\features\\messagesSlice.js":"10","D:\\documents\\codeing\\femi-app\\client\\src\\components\\HourlyWage.jsx":"11","D:\\documents\\codeing\\femi-app\\client\\src\\components\\RatesWage.jsx":"12","D:\\documents\\codeing\\femi-app\\client\\src\\components\\TotalSummery.jsx":"13","D:\\documents\\codeing\\femi-app\\client\\src\\components\\Shift.jsx":"14","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyShifts.jsx":"15","D:\\documents\\codeing\\femi-app\\client\\src\\components\\Signup.jsx":"16","D:\\documents\\codeing\\femi-app\\client\\src\\features\\userSlice.js":"17","D:\\documents\\codeing\\femi-app\\client\\src\\components\\Login.jsx":"18","D:\\documents\\codeing\\femi-app\\client\\src\\components\\CoinIcon.jsx":"19","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyRouter.jsx":"20","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyNav.jsx":"21","D:\\documents\\codeing\\femi-app\\client\\src\\components\\ConfirmModal.jsx":"22","D:\\documents\\codeing\\femi-app\\client\\src\\components\\ConfirmModalBefore.jsx":"23","D:\\documents\\codeing\\femi-app\\client\\src\\components\\AddShift.jsx":"24","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyCalendar.jsx":"25","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyAddShiftModal.jsx":"26","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyShiftModal.jsx":"27","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyMonthlySalaryModal.jsx":"28","D:\\documents\\codeing\\femi-app\\client\\src\\App.jsx":"29"},{"size":687,"mtime":1616680998206,"results":"30","hashOfConfig":"31"},{"size":5141,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":367,"mtime":1617102404405,"results":"33","hashOfConfig":"31"},{"size":6377,"mtime":1616692631073,"results":"34","hashOfConfig":"31"},{"size":1168,"mtime":1614362342661,"results":"35","hashOfConfig":"31"},{"size":3448,"mtime":1611332832735,"results":"36","hashOfConfig":"31"},{"size":1653,"mtime":1610402859922,"results":"37","hashOfConfig":"31"},{"size":822,"mtime":1610402842807,"results":"38","hashOfConfig":"31"},{"size":2251,"mtime":1611332832617,"results":"39","hashOfConfig":"31"},{"size":775,"mtime":1616692818543,"results":"40","hashOfConfig":"31"},{"size":1051,"mtime":1610457812566,"results":"41","hashOfConfig":"31"},{"size":1075,"mtime":1610402762408,"results":"42","hashOfConfig":"31"},{"size":1193,"mtime":1610402762421,"results":"43","hashOfConfig":"31"},{"size":1342,"mtime":1611332832687,"results":"44","hashOfConfig":"31"},{"size":3258,"mtime":1611332832681,"results":"45","hashOfConfig":"31"},{"size":4029,"mtime":1611343359226,"results":"46","hashOfConfig":"31"},{"size":558,"mtime":1617102404430,"results":"47","hashOfConfig":"31"},{"size":2819,"mtime":1617102404418,"results":"48","hashOfConfig":"31"},{"size":162,"mtime":1610402762357,"results":"49","hashOfConfig":"31"},{"size":1314,"mtime":1617102404427,"results":"50","hashOfConfig":"31"},{"size":915,"mtime":1617102404422,"results":"51","hashOfConfig":"31"},{"size":1100,"mtime":1611332832557,"results":"52","hashOfConfig":"31"},{"size":1272,"mtime":1611332832566,"results":"53","hashOfConfig":"31"},{"size":8131,"mtime":1617102404410,"results":"54","hashOfConfig":"31"},{"size":5589,"mtime":1611336985828,"results":"55","hashOfConfig":"31"},{"size":1495,"mtime":1611332832628,"results":"56","hashOfConfig":"31"},{"size":1739,"mtime":1611332832654,"results":"57","hashOfConfig":"31"},{"size":1221,"mtime":1611332832636,"results":"58","hashOfConfig":"31"},{"size":784,"mtime":1617102404402,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"122z2im",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\documents\\codeing\\femi-app\\client\\src\\index.js",[],["131","132"],"D:\\documents\\codeing\\femi-app\\client\\src\\serviceWorker.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\app\\store.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\features\\femiSlice.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\api.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\util.js",["133"],"const rateTable = {\r\n  0: 2,\r\n  1: 2.5,\r\n  2: 3,\r\n  3: 3.5,\r\n  4: 4,\r\n}\r\n\r\nconst fridayRate = 4\r\n\r\nconst addZero = (m) => {\r\n  if (m < 10) {\r\n    return `0${m}`\r\n  }\r\n  return m\r\n}\r\n\r\nconst fromTimeStringToHours = (totalTime) => {\r\n  if (totalTime === -1 || totalTime === 0) {\r\n    return ''\r\n  }\r\n  let time = totalTime\r\n  let [h, m] = time.split(':')\r\n\r\n  let totalRelInHours = (parseInt(m) + parseInt(h) * 60) / 60\r\n  return totalRelInHours\r\n}\r\n\r\nconst nineHoursTimeInHours = 9\r\nconst baseRate = 30\r\n\r\nconst getBaseHours = (totalTime) => {\r\n  let time = fromTimeStringToHours(totalTime)\r\n  return time > nineHoursTimeInHours ? nineHoursTimeInHours : time\r\n}\r\n\r\nconst get125RateHours = (totalTime) => {\r\n  let time = fromTimeStringToHours(totalTime)\r\n  return time > nineHoursTimeInHours ? time - nineHoursTimeInHours : 0\r\n}\r\n\r\nconst calcWagePerBaseHours = (timeInHours) => {\r\n  return timeInHours * baseRate\r\n}\r\n\r\nconst calcWagePer125Hours = (timeInHours) => {\r\n  return timeInHours * baseRate * 1.25\r\n}\r\n\r\nconst getDiffInTimesStr = (startTime, endTime) => {\r\n  let startArr = startTime.split(':')\r\n  let endArr = endTime.split(':')\r\n  let h = parseInt(endArr[0]) - parseInt(startArr[0])\r\n  let m = parseInt(endArr[1]) - parseInt(startArr[1])\r\n  if (h < 0) return -1\r\n  if (h === 0 && m === 0) return 0\r\n  if (h === 0 && m < 0) return -1\r\n\r\n\r\n  let diffTimeStr, minutes\r\n  if (m < 0) {\r\n    minutes = addZero(60 + m)\r\n    diffTimeStr = h - 1 + ':' + minutes\r\n  } else {\r\n    minutes = addZero(m)\r\n    diffTimeStr = h + ':' + minutes\r\n  }\r\n  return diffTimeStr\r\n}\r\n\r\nconst convertArrayToObjWithRates = (institutions) => {\r\n  let testsRatesObj = {}\r\n  institutions.forEach((inst) => {\r\n    testsRatesObj[inst.rate] = inst.tests\r\n  })\r\n  return testsRatesObj\r\n}\r\n\r\nconst createDayInfo = (\r\n  totalTime,\r\n  institutions,\r\n  id_number,\r\n  totalSumInstitutions,\r\n  baseSalary\r\n) => {\r\n  let baseHours = getBaseHours(totalTime)\r\n  let hoursPer125 = get125RateHours(totalTime)\r\n  let baseWage = calcWagePerBaseHours(baseHours)\r\n  let wageFor125 = calcWagePer125Hours(hoursPer125)\r\n  // let testsRatesObj = convertArrayToObjWithRates(institutions)\r\n\r\n  let dayInfo = {\r\n    id_number,\r\n    hours: {\r\n      baseHours: {\r\n        amount: baseHours,\r\n        baseWage,\r\n      },\r\n      hoursPer125: {\r\n        amount: hoursPer125,\r\n        wageFor125,\r\n      },\r\n    },\r\n    institutions,\r\n    total: Number(fixNum(totalSumInstitutions + baseSalary)),\r\n  }\r\n  return dayInfo\r\n}\r\n\r\nconst formatDate = (dateStr) => {\r\n  let [year, month, thirdPart] = dateStr.split('-')\r\n  let day = Number(thirdPart.split('T')[0])\r\n  return `${day}/${month}/${year}`\r\n}\r\n\r\nconst formatDate1 = (dateStr) => {\r\n  let [year, month, thirdPart] = dateStr.split('-')\r\n  let day = Number(thirdPart.split('T')[0])\r\n  return `${month}/${day}/${year}`\r\n}\r\n\r\nconst formatDateForMonth = (dateStr) => {\r\n  let [year, month] = dateStr.split('-')\r\n  return `${month}/${year}`\r\n}\r\n\r\nconst fixNum = (num) => {\r\n  return parseFloat(num).toFixed(2)\r\n}\r\n\r\nconst fromLineToDot = (rate) => {\r\n  return String(rate).replace('_', '.')\r\n}\r\n\r\nexport default {\r\n  fixNum,\r\n  rateTable,\r\n  fridayRate,\r\n  fromTimeStringToHours,\r\n  calcWagePerBaseHours,\r\n  calcWagePer125Hours,\r\n  get125RateHours,\r\n  getBaseHours,\r\n  getDiffInTimesStr,\r\n  convertArrayToObjWithRates,\r\n  createDayInfo,\r\n  formatDate,\r\n  fromLineToDot,\r\n  formatDateForMonth,\r\n  formatDate1,\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\List.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\Institution.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\MonthlySalary.jsx",["134","135","136","137"],"import React, { useEffect, useCallback } from 'react'\r\nimport api from '../api'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectFemi, updateMonthlyIncome } from '../features/femiSlice'\r\nimport { selectMessages, updateErrMessage } from '../features/messagesSlice'\r\nimport HourlyWage from './HourlyWage'\r\nimport RatesWage from './RatesWage'\r\nimport TotalSummery from './TotalSummery'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nlet month = 1\r\nexport default function MonthlySalary() {\r\n  let dispatch = useDispatch()\r\n  let today = new Date()\r\n  let femi = useSelector(selectFemi)\r\n  let messagesSelection = useSelector(selectMessages)\r\n\r\n  const getSalaryByMonth = (chosenMonth) => {\r\n    month = chosenMonth\r\n    let token = localStorage.getItem('token')\r\n    let id_number = localStorage.getItem('id_number')\r\n\r\n    api\r\n      .getSalaryByMonth(chosenMonth - 1, id_number, token)\r\n      .then((res) => {\r\n        dispatch(updateMonthlyIncome(res.data))\r\n        dispatch(updateErrMessage(''))\r\n      })\r\n      .catch((err) => {\r\n        if (err.response && err.response.data) {\r\n          dispatch(updateErrMessage(err.response.data.message))\r\n          console.log(err.response.data.message)\r\n        } else {\r\n          console.log(err.message)\r\n          dispatch(updateErrMessage(err.message))\r\n        }\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('this is first useEffect')\r\n    getSalaryByMonth(1)\r\n    console.log('there is a refresh for ref')\r\n  }, [])\r\n  let { baseHours, hoursPer125 } = femi.monthlyIncome.hours || {}\r\n  let { totalWageByCategory, totalWage, rates } = femi.monthlyIncome\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\r\n          <Form.Control\r\n            custom\r\n            onChange={(e) => getSalaryByMonth(e.target.value)}\r\n            as=\"select\"\r\n            size=\"lg\"\r\n          >\r\n            <option value={1}>ינואר-1</option>\r\n            <option value={2}>פברואר-2</option>\r\n            <option value={3}>מרץ-3</option>\r\n            <option value={4}>אפריל-4</option>\r\n            <option value={5}>מאי-5</option>\r\n            <option value={6}>יוני-6</option>\r\n            <option value={7}>יולי-7</option>\r\n            <option value={8}>אוגוסט-8</option>\r\n            <option value={9}>ספטמבר-9</option>\r\n            <option value={10}>אוקטובר-10</option>\r\n            <option value={11}>נובמבר-11</option>\r\n            <option value={12}>דצמבר-12</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      {messagesSelection.errMessage ? (\r\n        <div style={{ color: 'red' }}>{messagesSelection.errMessage}</div>\r\n      ) : (\r\n        <div>\r\n          {baseHours && (\r\n            <div>\r\n              <h1>משכורת : {`${month}/2021`}</h1>\r\n              <HourlyWage baseHours={baseHours} hoursPer125={hoursPer125} />\r\n              <RatesWage rates={rates} />\r\n              <TotalSummery\r\n                totalWageByCategory={totalWageByCategory}\r\n                totalWage={totalWage}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\features\\messagesSlice.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\HourlyWage.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\RatesWage.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\TotalSummery.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\Shift.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyShifts.jsx",["138","139"],"import React, { useEffect } from 'react'\r\nimport api from '../api'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form } from 'react-bootstrap'\r\n// import MyShiftModal from './MyShiftModal'\r\nimport Shift from './Shift'\r\n\r\nimport {\r\n  selectFemi,\r\n  updateAllMyShifts,\r\n  updateSalaryById,\r\n  updateShowModal,\r\n} from '../features/femiSlice'\r\nimport { selectMessages, updateErrMessage } from '../features/messagesSlice'\r\n//make all rest calls to work with id_number adn token!!!\r\n\r\nlet month = 1\r\nexport default function MyShifts() {\r\n  let dispatch = useDispatch()\r\n  let femi = useSelector(selectFemi)\r\n  let messagesSelection = useSelector(selectMessages)\r\n\r\n  const getMyMonthlyShifts = (chosenMonth) => {\r\n    let id_number = localStorage.getItem('id_number')\r\n    let token = localStorage.getItem('token')\r\n    month = chosenMonth\r\n\r\n    api\r\n      .getMyMonthlyShifts(month - 1, id_number, token)\r\n      .then((res) => {\r\n        dispatch(updateErrMessage(''))\r\n        dispatch(updateAllMyShifts(res.data))\r\n      })\r\n      .catch((err) => {\r\n        'err', err)\r\n        if (err.response) {\r\n          dispatch(updateErrMessage(err.response.data.message))\r\n        } else {\r\n          dispatch(updateErrMessage(err.message))\r\n        }\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    getMyMonthlyShifts(1)\r\n  }, [])\r\n\r\n  const updateSal = (sal) => {\r\n    dispatch(updateSalaryById(sal))\r\n  }\r\n  return (\r\n    <div>\r\n      {/* {femi.showModal && ( // tell react to not render it\r\n        <MyShiftModal\r\n          show={femi.showModal} // just make it visible\r\n          handleOnHide={() => dispatch(updateShowModal(false))}\r\n        />\r\n      )} */}\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\r\n            <Form.Control\r\n              custom\r\n              onChange={(e) => getMyMonthlyShifts(e.target.value)}\r\n              as=\"select\"\r\n              size=\"lg\"\r\n            >\r\n              <option value={1}>ינואר-1</option>\r\n              <option value={2}>פברואר-2</option>\r\n              <option value={3}>מרץ-3</option>\r\n              <option value={4}>אפריל-4</option>\r\n              <option value={5}>מאי-5</option>\r\n              <option value={6}>יוני-6</option>\r\n              <option value={7}>יולי-7</option>\r\n              <option value={8}>אוגוסט-8</option>\r\n              <option value={9}>ספטמבר-9</option>\r\n              <option value={10}>אוקטובר-10</option>\r\n              <option value={11}>נובמבר-11</option>\r\n              <option value={12}>דצמבר-12</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n        {/* <button onClick={getMyMonthlyShifts}>get salary</button> */}\r\n      </div>\r\n      {messagesSelection.errMessage ? (\r\n        <div style={{ color: 'red' }}>{messagesSelection.errMessage}</div>\r\n      ) : (\r\n        <div>\r\n          {femi.allMyShifts.length > 0 && (\r\n            <ul>\r\n              <h2>{`${month}/${new Date().getFullYear()}`}</h2>\r\n              {femi.allMyShifts.map((shift, ind) => (\r\n                <Shift updateSal={updateSal} key={ind} {...shift} />\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\Signup.jsx",["140"],"import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  selectMessages,\r\n  updateErrMessage,\r\n  updateSuccessMessage,\r\n} from '../features/messagesSlice'\r\nimport { Button, FormControl } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/signup.css'\r\nimport api from '../api'\r\n\r\nexport default function Signup() {\r\n  let dispatch = useDispatch()\r\n  let messagesSelection = useSelector(selectMessages)\r\n\r\n  const history = useHistory()\r\n\r\n  let id_numberRef = useRef(null)\r\n  let passwordRef = useRef(null)\r\n  let confirmRef = useRef(null)\r\n  let firstNameRef = useRef(null)\r\n  let lastNameRef = useRef(null)\r\n\r\n  const handleSignup = () => {\r\n    let newUser = {\r\n      id_number: id_numberRef.current.value,\r\n      password: passwordRef.current.value,\r\n      firstName: firstNameRef.current.value,\r\n      lastName: lastNameRef.current.value,\r\n      confirm: confirmRef.current.checked,\r\n    }\r\n    if (newUser.password.length < 4) {\r\n      dispatch(updateErrMessage('סיסמה צריכה להיות לפחות 4 תווים '))\r\n      return\r\n    }\r\n    if (newUser.id_number.length !== 9) {\r\n      dispatch(updateErrMessage('תעודת זהות חייבת להכיל 9 ספרות בלבד'))\r\n      return\r\n    }\r\n    if (newUser.firstName === '') {\r\n      dispatch(updateErrMessage('יש להכניס שם פרטי'))\r\n      return\r\n    }\r\n    if (newUser.lastName === '') {\r\n      dispatch(updateErrMessage('יש להכניס שם משפחה'))\r\n      return\r\n    }\r\n    if (newUser.confirm === false) {\r\n      dispatch(updateErrMessage('חייב לאשר את התקנון '))\r\n      return\r\n    }\r\n\r\n    api\r\n      .signup(newUser)\r\n      .then((res) => {\r\n        dispatch(updateErrMessage(''))\r\n        dispatch(updateSuccessMessage('נרשמת בהצלחה'))\r\n        setTimeout(() => {\r\n          history.push('/login')\r\n        }, 500)\r\n      })\r\n      .catch((err) => {\r\n        dispatch(updateErrMessage(err.response.data.message))\r\n      })\r\n  }\r\n\r\n  const updateConfirm = (e) => {\r\n    confirmRef.current.checked = e.target.checked\r\n  }\r\n\r\n  const resetErr = () => {\r\n    dispatch(updateErrMessage(''))\r\n  }\r\n  return (\r\n    <div className=\"signup\">\r\n      <h1>הרשמה</h1>\r\n\r\n      <p>:תעודת זהות </p>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"תעודת זהות\"\r\n        ref={id_numberRef}\r\n        onFocus={resetErr}\r\n      />\r\n      <p>:שם פרטי </p>\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"שם פרטי\"\r\n        ref={firstNameRef}\r\n        onFocus={resetErr}\r\n      />\r\n      <p>:שם משפחה </p>\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"שם משפחה\"\r\n        ref={lastNameRef}\r\n        onFocus={resetErr}\r\n      />\r\n      <p>:סיסמה </p>\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder=\"סיסמה\"\r\n        ref={passwordRef}\r\n        onFocus={resetErr}\r\n      />\r\n      <div style={{ color: 'red' }}>{messagesSelection.errMessage}</div>\r\n      <div style={{ color: 'green' }}>{messagesSelection.successMessage}</div>\r\n      <a\r\n        className=\"explenation-video\"\r\n        href=\"https://www.youtube.com/watch?v=c4QgG-Smbc0&feature=youtu.be&ab_channel=LeeYahav\"\r\n        target=\"_blank\"\r\n      >\r\n        סרטון הסבר\r\n      </a>\r\n      <br />\r\n      <input\r\n        type=\"checkbox\"\r\n        ref={confirmRef}\r\n        onChange={updateConfirm}\r\n        style={{ marginRight: '.5em' }}\r\n      />\r\n\r\n      <div className=\"takanon\">\r\n        <p>\r\n          אני מאשר בזו שהתוכנה הנל נועדה לסייע לי ויכול להיות שיהיו באגים בתוכנה\r\n        </p>\r\n        <p>\r\n          ובשל כך אני מתחיב שלא לתבוע את היוצר כיוון שהמטרה שלו היא לעזור לי\r\n          והכוונות שלו טובות\r\n        </p>\r\n      </div>\r\n      <Button onClick={handleSignup}>הרשם</Button>\r\n    </div>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\features\\userSlice.js",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\Login.jsx",["141","142","143"],"import React, { useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logUser, selectUser } from '../features/userSlice'\r\nimport {\r\n  selectMessages,\r\n  updateErrMessage,\r\n  updateSuccessMessage,\r\n} from '../features/messagesSlice'\r\nimport { Button, FormControl } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/signup.css'\r\nimport api from '../api'\r\n\r\nexport default function Login({ updateLogged }) {\r\n  let dispatch = useDispatch()\r\n  const history = useHistory()\r\n  let userSelection = useSelector(selectUser)\r\n  let messagesSelection = useSelector(selectMessages)\r\n\r\n  let id_numberRef = useRef(null)\r\n  let passwordRef = useRef(null)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(updateSuccessMessage(''))\r\n    if(localStorage.getItem(\"id_number\")){\r\n      history.push('/calender')\r\n    }\r\n  }, [])\r\n  const handleLogin = () => {\r\n    let userInfo = {\r\n      id_number: id_numberRef.current.value,\r\n      password: passwordRef.current.value,\r\n    }\r\n    if (userInfo.id_number.length !== 9) {\r\n      dispatch(updateErrMessage('תעודת זהות חייבת להכיל 9 ספרות בלבד'))\r\n      return\r\n    }\r\n    api\r\n      .login(userInfo)\r\n      .then((res) => {\r\n        updateLogged(true)\r\n        history.push('/calender')\r\n        let {token , id_number} = res.data \r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('id_number', id_number)\r\n        dispatch(logUser({token, id_number}))\r\n        dispatch(updateErrMessage(''))\r\n      })\r\n      .catch((err) => {\r\n        dispatch(updateErrMessage(err.response.data.message))\r\n      })\r\n  }\r\n\r\n  const resetErr = () => {\r\n    dispatch(updateErrMessage(''))\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>כניסה</h1>\r\n\r\n      <p>:תעודת זהות </p>\r\n      <FormControl\r\n        type=\"text\"\r\n        defaultValue = \"300628583\"\r\n        placeholder=\"תעודת זהות\"\r\n        onFocus={resetErr}\r\n        ref={id_numberRef}\r\n      />\r\n      <p>:סיסמה </p>\r\n\r\n      <FormControl\r\n        type=\"text\"\r\n        defaultValue = \"1111\"\r\n\r\n        placeholder=\"סיסמה\"\r\n        onFocus={resetErr}\r\n        ref={passwordRef}\r\n      />\r\n      <a\r\n        className=\"explenation-video\"\r\n        href=\"https://www.youtube.com/watch?v=c4QgG-Smbc0&feature=youtu.be&ab_channel=LeeYahav\"\r\n        target=\"_blank\"\r\n      >\r\n        סרטון הסבר\r\n      </a>\r\n      <br />\r\n      <Button onClick={handleLogin}>התחברות</Button>\r\n      <div className=\"registration-link\">\r\n        <p> : במידה ואינך רשום </p>\r\n        <a href=\"/signup\">הרשמה לאתר</a>\r\n      </div>\r\n      <div style={{ color: 'red' }}>{messagesSelection.errMessage}</div>\r\n      <div style={{ color: 'green' }}>{messagesSelection.successMessage}</div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\CoinIcon.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyRouter.jsx",["144","145","146","147","148","149"],"import React, { useEffect } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\nimport AddShift from './AddShift'\r\nimport MonthlySalary from './MonthlySalary'\r\nimport MyShifts from './MyShifts'\r\nimport Signup from './Signup'\r\nimport Login from './Login'\r\nimport Nav from './MyNav'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport MyCalendar from './MyCalendar'\r\nimport { selectUser } from '../features/userSlice'\r\nimport { useSelector } from 'react-redux'\r\nexport default function MyRouter() {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  let id_number = localStorage.getItem('id_number')\r\n  let userSelection = useSelector(selectUser)\r\n  useEffect(() => {\r\n    if (!id_number && location.pathname !== '/signup') {\r\n      history.push('/login')\r\n    }\r\n  }, [])\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        {!userSelection.isLogged ? <Redirect to=\"/login\" /> : <Redirect to=\"/calender\" />}\r\n      </Route>\r\n\r\n      <Route\r\n        path=\"/login\"\r\n        component={() => <Login  />}\r\n      ></Route>\r\n      \r\n      <Route\r\n        path=\"/calender\"\r\n        component={() => <MyCalendar />}\r\n      ></Route>\r\n      <Route path=\"/signup\" component={Signup}></Route>\r\n    </Switch>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyNav.jsx",["150","151"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nimport {logout, selectUser } from '../features/userSlice'\r\n\r\nexport default function MyNav() {\r\n  console.log('render nav')\r\n  const location = useLocation()\r\n  let dispatch = useDispatch()\r\n  let userSelection = useSelector(selectUser)\r\n  return (\r\n    <nav>\r\n      <ul style={{ fontSize: '1.4em', marginTop: '1em' }}>\r\n        <li>{location.pathname == '/signup' && <Link to=\"/\">כניסה</Link>}</li>\r\n\r\n        <li>\r\n          {userSelection.isLogged && (\r\n            <Link\r\n              to=\"/login\"\r\n              onClick={() => {\r\n                dispatch(logout())\r\n              }}\r\n            >\r\n              יציאה\r\n            </Link>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\ConfirmModal.jsx",["152"],"import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport savedIcon from '../images/savedIcon.png'\r\n\r\nexport default function ConfirmModal({ show, handleOnHide }) {\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleOnHide}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Dialog>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>נשמר בהצלחה</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <img className=\"saved\" src={savedIcon} alt=\"\" />\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleOnHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </Modal>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\ConfirmModalBefore.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\AddShift.jsx",["153","154","155","156"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, FormControl } from 'react-bootstrap'\r\nimport {connect , useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  selectMessages,\r\n  updateErrMessage,\r\n  updateSuccessMessage,\r\n  updateTimeErrMessage,\r\n} from '../features/messagesSlice'\r\nimport CoinIcon from './CoinIcon'\r\nimport api from '../api'\r\nimport {\r\n  addInstitution,\r\n  selectFemi,\r\n  resetFemiState,\r\n  toggleFriday,\r\n  updateShowAddShift,\r\n  updateShowModal,\r\n  updateBaseSalary,\r\n  updateEndTime,\r\n  updateStartTime,\r\n  updateTotalSumInstitutions,\r\n  updateShow1,\r\n  updateTotalTime,\r\n} from '../features/femiSlice'\r\nimport '../styles/addShift.css'\r\nimport util from '../util'\r\nimport List from './List'\r\nimport ConfirmModal from './ConfirmModal'\r\nimport ConfirmModalBefore from './ConfirmModalBefore'\r\n\r\nconst  AddShift = ({  creationDate,\r\n                      showConfirmationModal,\r\n                      updateShowConfirmationModal})=>{\r\n  let dispatch = useDispatch()\r\n  let femi = useSelector(selectFemi)\r\n\r\n\r\n  let messages = useSelector(selectMessages)\r\n\r\n  let testsRef = useRef(null)\r\n  let token = localStorage.getItem('token')\r\n  let institutionNameRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(updateTotalSumInstitutions())\r\n  }, [femi.institutions.length, femi.isFriday])\r\n\r\n  useEffect(() => {\r\n    let { startTime, endTime } = femi\r\n    if (startTime && endTime) {\r\n      dispatch(updateTotalTime())\r\n      dispatch(updateBaseSalary())\r\n    }\r\n  }, [femi.startTime, femi.endTime])\r\n\r\n  useEffect(() => {\r\n    if (femi.totalTime === -1) {\r\n      dispatch(updateTimeErrMessage(' הפרשי הזמן לא יכולים להיות שליליים '))\r\n    } else if (femi.totalTime === 0) {\r\n      dispatch(updateTimeErrMessage(' הפרשי הזמן לא יכולים להיות שווים ל 0  '))\r\n    } else {\r\n      dispatch(updateTimeErrMessage(''))\r\n    }\r\n  }, [femi.totalTime])\r\n\r\n  const addDayInfo = () => {\r\n    let { totalTime, institutions } = femi\r\n    let id_number = localStorage.getItem('id_number')\r\n    let dayInfo = util.createDayInfo(\r\n      totalTime,\r\n      institutions,\r\n      id_number,\r\n      femi.totalSumInstitutions,\r\n      femi.baseSalary,\r\n      creationDate\r\n    )\r\n\r\n    api\r\n      .saveDay(dayInfo, id_number, token)\r\n      .then((res) => {\r\n        dispatch(updateSuccessMessage(res.data.message))\r\n        dispatch(updateErrMessage(''))\r\n        dispatch(resetFemiState())\r\n        updateShowConfirmationModal(true)\r\n        dispatch(updateShow1(false))\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          dispatch(updateErrMessage(error.response.data.message))\r\n        } else {\r\n          dispatch(updateErrMessage(error.message))\r\n        }\r\n      })\r\n  }\r\n\r\n  const checkAllFields = () => {\r\n    if (femi.institutions.length < 1) {\r\n      dispatch(updateErrMessage('חייב להכניס מוסד אחד לפחות'))\r\n      return\r\n    }\r\n    if (messages.errMessage !== '') {\r\n      return\r\n    }\r\n    dispatch(updateShow1(true))\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-shift\">\r\n      <ConfirmModal\r\n        show={showConfirmationModal} // just make it visible\r\n        handleOnHide={() => updateShowConfirmationModal(false)}\r\n      />\r\n      <ConfirmModalBefore\r\n        InstitutionsLen={femi.institutions.length}\r\n        errMessage={femi.errMessage}\r\n        addDayInfo={addDayInfo}\r\n        show={femi.show1} // just make it visible\r\n        handleOnHide={() => dispatch(updateShow1(false))}\r\n      />\r\n      <div className=\"btn-container\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={() => dispatch(updateShowAddShift(false))}\r\n        >\r\n          סגור\r\n        </Button>\r\n      </div>\r\n      <h3 className=\"title\">הזנת יום עבודה</h3>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => dispatch(toggleFriday())}\r\n          style={{ marginRight: '.5em' }}\r\n        />\r\n\r\n        <label htmlFor=\"\" style={{ color: femi.isFriday ? 'green' : '' }}>\r\n          יום שישי\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"\">:שעת התחלה </label>\r\n        <FormControl\r\n          type=\"time\"\r\n          min=\"09:00\"\r\n          max=\"12:00\"\r\n          value={femi.startTime}\r\n          onChange={(e) => dispatch(updateStartTime(e.target.value))}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"\">:שעת סיום </label>\r\n        <FormControl\r\n          type=\"time\"\r\n          min={femi.startTime}\r\n          max=\"20:00\"\r\n          value={femi.endTime}\r\n          onChange={(e) => dispatch(updateEndTime(e.target.value))}\r\n          required\r\n        />\r\n      </div>\r\n      <div style={{ color: 'red' }}>{messages.timeErrMessage}</div>\r\n\r\n      <div>זמן עבודה: {femi.totalTime + ' '} שעות</div>\r\n\r\n      <h3 style={{ color: 'blue' }}>\r\n        <CoinIcon /> תשלום שעתי: {util.fixNum(femi.baseSalary)}\r\n      </h3>\r\n      <div>\r\n        <div>\r\n          <FormControl\r\n            className=\"inst-input\"\r\n            type=\"text\"\r\n            ref={institutionNameRef}\r\n            placeholder=\"שם המוסד\"\r\n            required\r\n          />\r\n          <FormControl\r\n            className=\"inst-input\"\r\n            type=\"number\"\r\n            ref={testsRef}\r\n            placeholder=\"מספר דגימות\"\r\n          />\r\n          <div style={{ color: 'red' }}>{messages.errMessage}</div>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              if (\r\n                institutionNameRef.current.value === '' ||\r\n                testsRef.current.value === ''\r\n              ) {\r\n                dispatch(updateErrMessage('צריך להשלים את כל השדות'))\r\n              } else {\r\n                dispatch(updateErrMessage(''))\r\n\r\n                dispatch(\r\n                  addInstitution({\r\n                    institutionName: institutionNameRef.current.value,\r\n                    tests: testsRef.current.value,\r\n                  })\r\n                )\r\n                institutionNameRef.current.value = ''\r\n                testsRef.current.value = ''\r\n              }\r\n            }}\r\n          >\r\n            הוסף מוסד\r\n          </Button>\r\n        </div>\r\n\r\n        <div>\r\n          <List institutions={femi.institutions} />\r\n        </div>\r\n        {femi.institutions.length > 1 && (\r\n          <div>\r\n            <h4 style={{ color: 'blue' }}>\r\n              <CoinIcon /> בונוס מעברי מוסד:\r\n              {femi.institutions.length > 0\r\n                ? util.fixNum((femi.institutions.length - 1) * 40)\r\n                : 0}\r\n            </h4>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <h3 style={{ color: 'green' }}>\r\n            <CoinIcon /> סכום סופי:{' '}\r\n            {util.fixNum(femi.totalSumInstitutions + femi.baseSalary)}\r\n          </h3>\r\n          <h3 style={{ color: 'gray', paddingBottom: '3em' }}>\r\n            <CoinIcon /> ממוצע לשעה :\r\n            {util.fixNum(\r\n              (femi.totalSumInstitutions + femi.baseSalary) /\r\n                util.fromTimeStringToHours(femi.totalTime)\r\n            )}\r\n          </h3>\r\n          {/* {femi.institutions.length > 0 &&\r\n            femi.totalTime !== -1 &&\r\n            femi.totalTime !== 0 &&\r\n            femi.totalTime !== '0:00' &&\r\n            messages.errMessage === '' &&\r\n            messages.timeErrMessage === '' && (\r\n              <> */}\r\n          <Button onClick={checkAllFields} style={{ marginBottom: '2em' }}>\r\n            שמור יום עבודה\r\n          </Button>\r\n          {/* </> */}\r\n          {/* )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst dispatchObject= {\r\n  addInstitution,\r\n  resetFemiState,\r\n  toggleFriday,\r\n  updateShowAddShift,\r\n  updateShowModal,\r\n  updateBaseSalary,\r\n  updateEndTime,\r\n  updateStartTime,\r\n  updateTotalSumInstitutions,\r\n  updateShow1,\r\n  updateTotalTime,\r\n\r\n  selectMessages,\r\n  updateErrMessage,\r\n  updateSuccessMessage,\r\n  updateTimeErrMessage,\r\n}\r\nexport default connect(null,dispatchObject)(AddShift)","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyCalendar.jsx",["157","158","159","160","161","162","163","164"],"import React, { useEffect, useState } from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  selectFemi,\r\n  updateAllMyShifts,\r\n  updateSalaryById,\r\n  updateShowAddShift,\r\n  updateShowModal,\r\n} from '../features/femiSlice'\r\nimport MyShiftModal from './MyShiftModal'\r\nimport MyMonthlySalaryModal from './MyMonthlySalaryModal'\r\nimport { selectMessages, updateErrMessage } from '../features/messagesSlice'\r\n\r\nimport savedIcon from '../images/savedIcon.png'\r\nimport '../styles/myCalender.css'\r\nimport api from '../api'\r\nimport MyAddShiftModal from './MyAddShiftModal'\r\n\r\nlet id_number\r\nlet token\r\n\r\nexport default function MyCalendar() {\r\n  const [value, setValue] = useState(new Date())\r\n  const [day, setDay] = useState(value.getDate())\r\n  const [month, setMonth] = useState(value.getMonth())\r\n  const [year, setYear] = useState(value.getFullYear())\r\n\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false)\r\n  const [datesOfShifts, setDatesOfShifts] = useState([])\r\n  const [showMonthlySalary, setShowMonthlySalary] = useState(false)\r\n\r\n  let dispatch = useDispatch()\r\n  let femi = useSelector(selectFemi)\r\n\r\n  const img = <img className=\"saved\" src={savedIcon} alt=\"\" />\r\n\r\n  useEffect(() => {\r\n    id_number = localStorage.getItem('id_number')\r\n    token = localStorage.getItem('token')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getMyMonthlyShifts()\r\n  }, [month, year, showConfirmationModal])\r\n\r\n  const updateDatesWithShifts = (shifts) => {\r\n    let dates = []\r\n    for (const shift of shifts) {\r\n      let date = new Date(shift.creationDate)\r\n      const dateObj = fromDateToDateObj(date)\r\n      dates.push(dateObj)\r\n    }\r\n    setDatesOfShifts(dates)\r\n  }\r\n\r\n  const getMyMonthlyShifts = () => {\r\n    api\r\n      .getMyMonthlyShifts(month, year, id_number, token)\r\n      .then((res) => {\r\n        dispatch(updateErrMessage(''))\r\n        dispatch(updateAllMyShifts(res.data))\r\n        updateDatesWithShifts(res.data)\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          dispatch(updateErrMessage(err.response.data.message))\r\n        } else {\r\n          dispatch(updateErrMessage(err.message))\r\n        }\r\n      })\r\n  }\r\n\r\n  const markWorkingDays = (date, view) => {\r\n    let { day, month, year } = fromDateToDateObj(date)\r\n    for (const myDate of datesOfShifts) {\r\n      if (myDate.day == day && myDate.month == month && myDate.year == year) {\r\n        return img\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  const openRightModal = (date) => {\r\n    setDay(() => date.getDate())\r\n    const hasShift = markWorkingDays(date)\r\n    if (hasShift) {\r\n      let shiftId = getShiftIdByDate(date)\r\n      if (shiftId) {\r\n        getSalaryByID(shiftId)\r\n      }\r\n      return\r\n    }\r\n    dispatch(updateShowAddShift(true))\r\n  }\r\n\r\n  const getShiftIdByDate = (date) => {\r\n    for (const shift of femi.allMyShifts) {\r\n      if (new Date(shift.creationDate).getDate() === date.getDate()) {\r\n        return shift._id\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  const getSalaryByID = (shiftId) => {\r\n    api\r\n      .getSalaryByID(shiftId, id_number, token)\r\n      .then((res) => {\r\n        dispatch(updateSalaryById(res.data))\r\n        dispatch(updateShowModal(true))\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n\r\n  const fromDateToDateObj = (date) => {\r\n    const dateObj = {\r\n      day: date.getDate(),\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n    }\r\n    return dateObj\r\n  }\r\n\r\n  const increaseMonth = () => {\r\n    let prevMonth = month\r\n    setMonth((prev) => (prev + 1) % 12)\r\n    if (prevMonth == 11) {\r\n      setYear((prev) => prev + 1)\r\n    }\r\n  }\r\n\r\n  const decreaseMonth = () => {\r\n    let prevMonth = month\r\n    setMonth((prev) => (((prev - 1) % 12) + 12) % 12)\r\n    if (prevMonth == 0) {\r\n      setYear((prev) => prev - 1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {femi.showModal && ( // tell react to not render it\r\n        <MyShiftModal\r\n          show={femi.showModal} // just make it visible\r\n          handleOnHide={() => dispatch(updateShowModal(false))}\r\n        />\r\n      )}\r\n      {femi.showAddShift && (\r\n        <MyAddShiftModal\r\n          showConfirmationModal={showConfirmationModal}\r\n          updateShowConfirmationModal={setShowConfirmationModal}\r\n          creationDate={new Date(year, month, day)}\r\n          show={femi.showAddShift}\r\n          handleOnHide={() => dispatch(updateShowAddShift(false))}\r\n        />\r\n      )}\r\n      {showMonthlySalary && (\r\n        <MyMonthlySalaryModal\r\n          month={month}\r\n          year={year}\r\n          handleOnHide={() => setShowMonthlySalary(false)}\r\n          show={showMonthlySalary}\r\n        />\r\n      )}\r\n      <>\r\n        <button onClick={() => setShowMonthlySalary(true)}>\r\n          משכורת חודשית\r\n        </button>\r\n        <Calendar\r\n          calendarType={'Hebrew'}\r\n          tileContent={({ activeStartDay, date, view }) =>\r\n            markWorkingDays(date, view)\r\n          }\r\n          onClickDay={(date) => openRightModal(date)}\r\n          nextLabel={<p onClick={increaseMonth}>{'>'}</p>}\r\n          prevLabel={<p onClick={decreaseMonth}>{'<'}</p>}\r\n          next2Label={<p onClick={() => setYear((prev) => prev + 1)}>{'>>'}</p>}\r\n          prev2Label={<p onClick={() => setYear((prev) => prev - 1)}>{'<<'}</p>}\r\n          onChange={setValue}\r\n          value={value}\r\n          maxDate={new Date()}\r\n          minDate={new Date(2021, 0, 1)}\r\n        />\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyAddShiftModal.jsx",["165","166","167"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport util from '../util'\r\nimport List from './List'\r\nimport HourlyWage from './HourlyWage'\r\nimport AddShift from './AddShift'\r\n\r\nimport { selectFemi } from '../features/femiSlice'\r\nimport { Modal, Button, Card } from 'react-bootstrap'\r\n\r\nexport default function MyAddShiftModal({\r\n  showConfirmationModal,\r\n  updateShowConfirmationModal,\r\n  creationDate,\r\n  show,\r\n  handleOnHide,\r\n}) {\r\n  let femi = useSelector(selectFemi)\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleOnHide}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Dialog>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{util.formatDateObjToStr(creationDate)}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Card style={{ width: '18rem', border: 'none', margin: 'auto' }}>\r\n            <Card.Header></Card.Header>\r\n            <Card.Body>\r\n              <AddShift\r\n                showConfirmationModal={showConfirmationModal}\r\n                updateShowConfirmationModal={updateShowConfirmationModal}\r\n                creationDate={creationDate}\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleOnHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </Modal>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyShiftModal.jsx",[],"D:\\documents\\codeing\\femi-app\\client\\src\\components\\MyMonthlySalaryModal.jsx",["168","169","170","171"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport util from '../util'\r\nimport List from './List'\r\nimport HourlyWage from './HourlyWage'\r\nimport MonthlySalary from './MonthlySalary'\r\nimport { selectFemi } from '../features/femiSlice'\r\nimport { Modal, Button, Card } from 'react-bootstrap'\r\n\r\nexport default function MyMonthlySalaryModal({\r\n  month,\r\n  year,\r\n  show,\r\n  handleOnHide,\r\n}) {\r\n  let femi = useSelector(selectFemi)\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleOnHide}\r\n      dialogClassName=\"modal-90w\"\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Dialog>\r\n\r\n        <Modal.Body>\r\n          <Card style={{ width: '18rem', border: 'none' }}>\r\n            <Card.Header></Card.Header>\r\n            <Card.Body>\r\n              <MonthlySalary\r\n                month={month}\r\n                year={year}\r\n                closeWindow={handleOnHide}\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleOnHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </Modal>\r\n  )\r\n}\r\n","D:\\documents\\codeing\\femi-app\\client\\src\\App.jsx",["172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":137,"column":1,"nodeType":"180","endLine":153,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":39},{"ruleId":"181","severity":1,"message":"185","line":9,"column":10,"nodeType":"183","messageId":"184","endLine":9,"endColumn":14},{"ruleId":"181","severity":1,"message":"186","line":15,"column":7,"nodeType":"183","messageId":"184","endLine":15,"endColumn":12},{"ruleId":"187","severity":1,"message":"188","line":40,"column":6,"nodeType":"189","endLine":40,"endColumn":8,"suggestions":"190"},{"ruleId":"181","severity":1,"message":"191","line":13,"column":3,"nodeType":"183","messageId":"184","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"192","line":49,"column":6,"nodeType":"189","endLine":49,"endColumn":8,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":115,"column":9,"nodeType":"196","endLine":115,"endColumn":24},{"ruleId":"181","severity":1,"message":"197","line":17,"column":7,"nodeType":"183","messageId":"184","endLine":17,"endColumn":20},{"ruleId":"187","severity":1,"message":"198","line":29,"column":6,"nodeType":"189","endLine":29,"endColumn":8,"suggestions":"199"},{"ruleId":"194","severity":1,"message":"195","line":84,"column":9,"nodeType":"196","endLine":84,"endColumn":24},{"ruleId":"181","severity":1,"message":"200","line":3,"column":20,"nodeType":"183","messageId":"184","endLine":3,"endColumn":26},{"ruleId":"181","severity":1,"message":"201","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":16},{"ruleId":"181","severity":1,"message":"202","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":21},{"ruleId":"181","severity":1,"message":"203","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":16},{"ruleId":"181","severity":1,"message":"204","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":11},{"ruleId":"187","severity":1,"message":"205","line":28,"column":6,"nodeType":"189","endLine":28,"endColumn":8,"suggestions":"206"},{"ruleId":"181","severity":1,"message":"200","line":3,"column":27,"nodeType":"183","messageId":"184","endLine":3,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":15,"column":32,"nodeType":"209","messageId":"210","endLine":15,"endColumn":34},{"ruleId":"181","severity":1,"message":"211","line":4,"column":23,"nodeType":"183","messageId":"184","endLine":4,"endColumn":34},{"ruleId":"181","severity":1,"message":"212","line":1,"column":36,"nodeType":"183","messageId":"184","endLine":1,"endColumn":44},{"ruleId":"187","severity":1,"message":"213","line":48,"column":6,"nodeType":"189","endLine":48,"endColumn":47,"suggestions":"214"},{"ruleId":"187","severity":1,"message":"215","line":56,"column":6,"nodeType":"189","endLine":56,"endColumn":36,"suggestions":"216"},{"ruleId":"187","severity":1,"message":"213","line":66,"column":6,"nodeType":"189","endLine":66,"endColumn":22,"suggestions":"217"},{"ruleId":"181","severity":1,"message":"218","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"219","line":15,"column":10,"nodeType":"183","messageId":"184","endLine":15,"endColumn":24},{"ruleId":"187","severity":1,"message":"192","line":47,"column":6,"nodeType":"189","endLine":47,"endColumn":42,"suggestions":"220"},{"ruleId":"207","severity":1,"message":"208","line":79,"column":22,"nodeType":"209","messageId":"210","endLine":79,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":79,"column":45,"nodeType":"209","messageId":"210","endLine":79,"endColumn":47},{"ruleId":"207","severity":1,"message":"208","line":79,"column":69,"nodeType":"209","messageId":"210","endLine":79,"endColumn":71},{"ruleId":"207","severity":1,"message":"208","line":130,"column":19,"nodeType":"209","messageId":"210","endLine":130,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":138,"column":19,"nodeType":"209","messageId":"210","endLine":138,"endColumn":21},{"ruleId":"181","severity":1,"message":"221","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":12},{"ruleId":"181","severity":1,"message":"222","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"223","line":18,"column":7,"nodeType":"183","messageId":"184","endLine":18,"endColumn":11},{"ruleId":"181","severity":1,"message":"224","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"221","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":12},{"ruleId":"181","severity":1,"message":"222","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"223","line":16,"column":7,"nodeType":"183","messageId":"184","endLine":16,"endColumn":11},{"ruleId":"181","severity":1,"message":"212","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"211","line":6,"column":23,"nodeType":"183","messageId":"184","endLine":6,"endColumn":34},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'today' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getSalaryByMonth' and 'month'. Either include them or remove the dependency array.","ArrayExpression",["227"],"'updateShowModal' is defined but never used.","React Hook useEffect has a missing dependency: 'getMyMonthlyShifts'. Either include it or remove the dependency array.",["228"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'userSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["229"],"'Router' is defined but never used.","'AddShift' is defined but never used.","'MonthlySalary' is defined but never used.","'MyShifts' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'id_number', and 'location.pathname'. Either include them or remove the dependency array.",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'dispatch' and 'femi'. Either include them or remove the dependency array.",["232"],["233"],"'Button' is defined but never used.","'selectMessages' is defined but never used.",["234"],"'List' is defined but never used.","'HourlyWage' is defined but never used.","'femi' is assigned a value but never used.","'util' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [getSalaryByMonth, month]",{"range":"251","text":"252"},"Update the dependencies array to be: [getMyMonthlyShifts]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, history]",{"range":"255","text":"256"},"Update the dependencies array to be: [history, id_number, location.pathname]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, femi.institutions.length, femi.isFriday]",{"range":"259","text":"260"},"Update the dependencies array to be: [femi.startTime, femi.endTime, femi, dispatch]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, femi.totalTime]",{"range":"263","text":"264"},"Update the dependencies array to be: [month, year, showConfirmationModal, getMyMonthlyShifts]",{"range":"265","text":"266"},[1339,1341],"[getSalaryByMonth, month]",[1352,1354],"[getMyMonthlyShifts]",[881,883],"[dispatch, history]",[864,866],"[history, id_number, location.pathname]",[1298,1339],"[dispatch, femi.institutions.length, femi.isFriday]",[1520,1550],"[femi.startTime, femi.endTime, femi, dispatch]",[1877,1893],"[dispatch, femi.totalTime]",[1525,1561],"[month, year, showConfirmationModal, getMyMonthlyShifts]"]